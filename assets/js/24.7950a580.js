(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{385:function(t,s,n){"use strict";n.r(s);var e=n(44),a=Object(e.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"systemd-系统管理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#systemd-系统管理"}},[t._v("#")]),t._v(" Systemd 系统管理")]),t._v(" "),n("p",[t._v("Systemd 是 Linux 系统工具，用来启动守护进程，如今已成为大多数发行版的标准配置。以下介绍一些 systemd 的常用命令")]),t._v(" "),n("h2",{attrs:{id:"systemctl"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#systemctl"}},[t._v("#")]),t._v(" systemctl")]),t._v(" "),n("p",[n("code",[t._v("systemctl")]),t._v(" 是 Systemd 的主命令，用于管理系统。")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启系统")]),t._v("\nsystemctl "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reboot")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关闭系统，切断电源")]),t._v("\nsystemctl poweroff\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CPU停止工作")]),t._v("\nsystemctl "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("halt")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 暂停系统")]),t._v("\nsystemctl "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("suspend")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 让系统进入冬眠状态")]),t._v("\nsystemctl hibernate\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 让系统进入交互式休眠状态")]),t._v("\nsystemctl hybrid-sleep\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动进入救援状态（单用户状态）")]),t._v("\nsystemctl rescue\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 服务相关")]),t._v("\n\nsystemctl "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" httpd.service  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使某服务自动启动")]),t._v("\n\nsystemctl disable httpd.service  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使某服务不自动启动\t \t")]),t._v("\n\nsystemctl status httpd.service  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检查服务状态（服务详细信息） ")]),t._v("\n\nsystemctl is-active httpd.service  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 仅显示是否 Active")]),t._v("\n\nsystemctl list-units  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出正在运行的 Unit")]),t._v("\n\nsystemctl list-units -all  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示所有的服务")]),t._v("\n\nsystemctl list-units --type"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("service  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示所有已启动的服务")]),t._v("\n\nsystemctl start httpd.service  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动某服务")]),t._v("\n\nsystemctl stop httpd.service  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 停止某服务")]),t._v("\n\nsystemctl restart httpd.service  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启某服务")]),t._v("\n\nsystemctl reload apache.service  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重新加载一个服务的配置文件")]),t._v("\n\nsystemctl "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" apache.service  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 杀死一个服务的所有子进程")]),t._v("\n\nsystemctl daemon-reload  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重载所有修改过的配置文件")]),t._v("\n\nsystemctl list-dependencies docker.service  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看依赖关系")]),t._v("\n\nsystemctl list-unit-files  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出所有配置文件")]),t._v("\n\nsystemctl "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" docker.service  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看配置文件")]),t._v("\n")])])]),n("h2",{attrs:{id:"systemd-analyze"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#systemd-analyze"}},[t._v("#")]),t._v(" systemd-analyze")]),t._v(" "),n("p",[n("code",[t._v("systemd-analyze")]),t._v(" 命令用于查看启动耗时。")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看启动耗时")]),t._v("\nsystemd-analyze                                                                                       \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看每个服务的启动耗时")]),t._v("\nsystemd-analyze blame\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示瀑布状的启动过程流")]),t._v("\nsystemd-analyze critical-chain\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示指定服务的启动流")]),t._v("\nsystemd-analyze critical-chain atd.service\n")])])]),n("h2",{attrs:{id:"hostnamectl"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hostnamectl"}},[t._v("#")]),t._v(" hostnamectl")]),t._v(" "),n("p",[n("code",[t._v("hostnamectl")]),t._v(" 命令用于查看当前主机的信息。")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示当前主机的信息")]),t._v("\nhostnamectl\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置主机名。")]),t._v("\nhostnamectl set-hostname rhel7\n")])])]),n("h2",{attrs:{id:"timedatectl"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#timedatectl"}},[t._v("#")]),t._v(" timedatectl")]),t._v(" "),n("p",[n("code",[t._v("timedatectl")]),t._v(" 命令用于查看当前时区设置。")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看当前时区设置")]),t._v("\ntimedatectl\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示所有可用的时区")]),t._v("\ntimedatectl list-timezones                                                                                   \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置当前时区")]),t._v("\ntimedatectl set-timezone America/New_York\ntimedatectl set-time YYYY-MM-DD\ntimedatectl set-time HH:MM:SS\n")])])]),n("h2",{attrs:{id:"loginctl"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#loginctl"}},[t._v("#")]),t._v(" loginctl")]),t._v(" "),n("p",[n("code",[t._v("loginctl")]),t._v(" 命令用于查看当前登录的用户。")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出当前session")]),t._v("\nloginctl list-sessions\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出当前登录用户")]),t._v("\nloginctl list-users\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出显示指定用户的信息")]),t._v("\nloginctl show-user ruanyf\n")])])]),n("h2",{attrs:{id:"journalctl"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#journalctl"}},[t._v("#")]),t._v(" journalctl")]),t._v(" "),n("p",[t._v("Systemd 统一管理所有 Unit 的启动日志。带来的好处就是，可以只用 "),n("code",[t._v("journalctl")]),t._v(" 一个命令，查看所有日志（内核日志和应用日志）。日志的配置文件是 "),n("code",[t._v("/etc/systemd/journald.conf")]),t._v(" 。")]),t._v(" "),n("p",[n("code",[t._v("journalctl")]),t._v(" 功能强大，用法非常多。")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看所有日志（默认情况下 ，只保存本次启动的日志）")]),t._v("\njournalctl\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看内核日志（不显示应用日志）")]),t._v("\njournalctl -k\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看系统本次启动的日志")]),t._v("\njournalctl -b\njournalctl -b -0\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看上一次启动的日志（需更改设置）")]),t._v("\njournalctl -b -1\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看指定时间的日志")]),t._v("\njournalctl --since"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2012-10-30 18:17:16"')]),t._v("\njournalctl --since "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"20 min ago"')]),t._v("\njournalctl --since yesterday\njournalctl --since "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2015-01-10"')]),t._v(" --until "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2015-01-11 03:00"')]),t._v("\njournalctl --since 09:00 --until "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1 hour ago"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示尾部的最新10行日志")]),t._v("\njournalctl -n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示尾部指定行数的日志")]),t._v("\njournalctl -n "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 实时滚动显示最新日志")]),t._v("\njournalctl -f\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看指定服务的日志")]),t._v("\njournalctl /usr/lib/systemd/systemd\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看指定进程的日志")]),t._v("\njournalctl "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("_PID")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看某个路径的脚本的日志")]),t._v("\njournalctl /usr/bin/bash\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看指定用户的日志")]),t._v("\njournalctl "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("_UID")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),t._v(" --since today\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看某个 Unit 的日志")]),t._v("\njournalctl -u nginx.service\njournalctl -u nginx.service --since today\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 实时滚动显示某个 Unit 的最新日志")]),t._v("\njournalctl -u nginx.service -f\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 合并显示多个 Unit 的日志")]),t._v("\njournalctl -u nginx.service -u php-fpm.service --since today\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看指定优先级（及其以上级别）的日志，共有8级")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 0: emerg")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1: alert")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2: crit")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3: err")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4: warning")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 5: notice")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 6: info")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 7: debug")]),t._v("\njournalctl -p err -b\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 日志默认分页输出，--no-pager 改为正常的标准输出")]),t._v("\njournalctl --no-pager\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以 JSON 格式（单行）输出")]),t._v("\njournalctl -b -u nginx.service -o json\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以 JSON 格式（多行）输出，可读性更好")]),t._v("\njournalctl -b -u nginx.serviceqq\n -o json-pretty\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示日志占据的硬盘空间")]),t._v("\njournalctl --disk-usage\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定日志文件占据的最大空间")]),t._v("\njournalctl --vacuum-size"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1G\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定日志文件保存多久")]),t._v("\njournalctl --vacuum-time"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1years\n")])])]),n("p",[n("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("原文链接: 阮一峰: Systemd 入门教程：命令篇"),n("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=a.exports}}]);